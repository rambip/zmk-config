/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        i_trema: i_trema {
            compatible = "zmk,behavior-macro";
            label = "i_trema";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT &kp I>,
                <&macro_release>,
                <&kp RIGHT_ALT>;
        };
        r_bracket: r_bracket {
            compatible = "zmk,behavior-macro";
            label = "r_bracket";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT &kp RIGHT_PARENTHESIS>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            wait-ms = <30>;
            tap-ms = <30>;
        };
        l_bracket: l_bracket {
            compatible = "zmk,behavior-macro";
            label = "l_bracket";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT &kp LEFT_PARENTHESIS>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            wait-ms = <30>;
            tap-ms = <30>;
        };
        r_brace: r_brace {
            compatible = "zmk,behavior-macro";
            label = "r_brace";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT &kp STAR>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            wait-ms = <30>;
            tap-ms = <30>;
        };
        l_brace: l_brace {
            compatible = "zmk,behavior-macro";
            label = "l_brace";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT &kp AMPERSAND>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            wait-ms = <30>;
            tap-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // FIXME: dessin
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
          &kp TAB   &kp B  &kp SLASH     &kp P    &kp O      &kp W              &sl 4            &kp V   &kp D   &kp L   &kp J   &kp BSPC
 &mt LCTRL ESCAPE   &kp A      &kp U     &kp I    &kp E  &kp COMMA              &kp C            &kp T   &kp S   &kp R   &kp N      &kp M
     &kp LEFT_WIN   &kp Z      &kp Y     &kp X  &kp DOT  &kp COLON              &kp K            &kp Q   &kp G   &kp H   &kp F  &kp ENTER
                                      &kp RALT    &mo 1             &kp SPACE          &kp RIGHT_SHIFT   &mo 2
            >;
        };

        lower_layer {
            // ---------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
 &kp SLASH   &kp EXCL       &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                  &kp CARET   &kp AMPS     &kp N8   &kp LPAR   &kp RPAR        &kp DEL
    &trans  &kp MINUS  &kp KP_PLUS  &l_brace  &r_brace   &kp PIPE                   &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT  &kp GRAVE      &kp TILDE
    &trans    &kp ESC     &kp LGUI  &kp LALT  &kp CLCK    &kp DQT                   &kp HOME  &kp PG_DN  &kp PG_UP    &kp END  &kp PSCRN  &mt RSHFT RET
                                      &trans    &trans             &kp UNDERSCORE                 &mo 3     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
 &trans     &kp N1     &kp N2      &kp N3      &kp N4    &kp N5            &kp N6  &kp N7  &kp N8   &kp N9   &kp N0  &kp DEL
 &trans  &kp MINUS  &kp EQUAL  &l_bracket  &r_bracket  &kp BSLH            &kp F1  &kp F2  &kp F3   &kp F4   &kp F5   &kp F6
 &trans    &kp ESC   &kp LGUI    &kp RALT    &kp CLCK   &kp DQT            &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
                                   &trans       &mo 3            &kp BSPC          &trans  &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
 &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF   &none  &rgb_ug RGB_TOG          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
 &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR   &none            &none                 &none         &none         &none         &none         &none       &none
           &none            &none            &none            &none   &none            &none                &reset         &none         &none         &none         &none       &none
                                                             &trans  &trans                   &tog 3                      &trans        &trans
            >;
        };

        ACCENTS {
            bindings = <
 &trans           &trans  &kp SINGLE_QUOTE  &kp SINGLE_QUOTE  &trans  &trans                     &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp NON_US_BSLH   &kp NON_US_HASH          &i_trema  &trans  &trans          &kp RIGHT_BRACKET  &trans  &trans  &trans  &trans  &trans
 &trans           &trans            &trans            &trans  &trans  &trans                     &trans  &trans  &trans  &trans  &trans  &trans
                                                      &trans  &trans          &trans                     &trans  &trans
            >;
        };
    };
};
