/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define SWITCH 1
#define SYMB 2
#define NUMS 3
#define ACCENT 4
#define GAMES 5
#define FUNCTION 6

// decimal HID code to keypress macro
// see https://github.com/zmkfirmware/zmk/blob/94789a092c6d8ddf5ab5ad88eb011a4ece6b5cee/app/include/dt-bindings/zmk/hid_usage_pages.h
#define KEYPRESS_FROM_HID(hidcode) ((7 << 16) | hidcode)

// usb-hid scancodes from their usual keycode equivalent
#define K26 KEYPRESS_FROM_HID(0x2f)
#define K27 KEYPRESS_FROM_HID(0x30)
#define K40 KEYPRESS_FROM_HID(0x34)
#define K41 KEYPRESS_FROM_HID(0x35)
#define K43 KEYPRESS_FROM_HID(0x31)
#define K53 KEYPRESS_FROM_HID(0x38)
#define K86 KEYPRESS_FROM_HID(0x64)


/ {
    macros {
        caret: caret {
            compatible = "zmk,behavior-macro";
            label = "caret";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp SPACE>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        backtick_double: backtick_double {
            compatible = "zmk,behavior-macro";
            label = "backtick_double";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp LEFT_BRACKET &kp LEFT_BRACKET>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
    };

    behaviors {
        // apply modifier when hold, sticky modifier when tapped
        kp_sticky: behavior_key_sticky {
            compatible = "zmk,behavior-hold-tap";
            label = "kp_sticky";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&sk>;
        };
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
        comma_semi: behaviour_comma_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMI";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        symb_num: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo SYMB>, <&mo NUMS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                // <tab>     B         É         P       O       W
                &kp TAB   &kp B   &kp K53   &kp P   &kp O   &kp W              
                // <accent>   V        D         L       J       <bsp>
                &sl ACCENT  &kp V   &kp D     &kp L   &kp J    &kp BSPC

                // <escape> -> <ctrl>     A       U       I       E      ,
                &mt LCTRL ESCAPE       &kp A   &kp U   &kp I   &kp E  &comma_semi
                // C        T       S       R       N       M
                &kp C      &kp T   &kp S   &kp R   &kp N   &kp M

                // change layout      Z       Y       X       .          '
                &mo SWITCH   &kp Z   &kp Y   &kp X   &kp DOT   &kp LS(COMMA)
                // K      Q       G       H       F       <enter>
                &kp K   &kp Q   &kp G   &kp H   &kp F    &kp ENTER

                // <alt>         <symbol>             <space>               <shift>           <super> 
                &kp LALT   &kp_sticky RSHIFT RSHIFT  &lt FUNCTION SPACE  &symb_num   &kp LEFT_WIN
                >;
        };

        switch_layer {
            bindings = <

                &none &none &none &none &none &none
                // bluetooth profile selection
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4 &bt BT_CLR

                // output selection
                &none &out OUT_BLE &out OUT_USB &none &none &none
                // change layout
                &none  &trans  &tog SYMB  &none  &tog NUMS  &none

                &none &none &none &none &none &none
                // change layout
                &none &none &tog GAMES &none &tog FUNCTION &none

                &none &none &none &none &none
            >;
        };

        symbol_layer {
            bindings = <
                //              !            @           #       $       %
                &trans     &kp EXCL      &kp AT  &kp HASH  &kp DLLR  &kp PRCNT
                // ^      &          *          (          )       <backspace>
                &caret  &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR     &kp DEL

                //          ?              =          +        -           :
                &trans   &kp LS(N6)   &kp EQUAL  &kp PLUS   &kp MINUS   &kp COLON
                // <-       \/          /\        ->           |      <backslash>
                &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT   &kp RA(K41)  &kp LS(K41)

                //               [        ]            {          }           
                &tog SYMB  &kp RA(N9)  &kp RA(N0)  &kp RA(N7)  &kp RA(N8)  &trans
                //        `             ~           <              >           /     
                &backtick_double  &kp RA(K27)  &kp RA(COMMA)  &kp RA(DOT)  &kp K41  &kp ENTER

                //                    
                &trans    &kp CAPS       &kp UNDERSCORE       &trans     &trans
                >;
        };
        

        num_layer {
            bindings = < 
                //          1          2       3        4       5
                &trans     &kp N1   &kp N2   &kp N3   &kp N4   &kp N5
                //  6       7        8        9               mute
                &kp N6    &kp N7   &kp N8   &kp N9   &trans    &kp BACKSPACE

                //          ?              =          +        -           ,
                &trans   &kp LS(N6)   &kp EQUAL  &kp PLUS   &kp MINUS   &kp COMMA
                // <-       \/          /\      ->       0  
                &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp N0 &trans

                //  
                &tog NUMS &trans &trans &trans &kp DOT &trans
                &trans    &trans &trans &trans &trans &kp ENTER

                //
                &trans    &trans       &trans        &tog NUMS  &trans
                >;
        };

 
        accent_layer {
            bindings = <
                //              €               µ           °
                &trans &trans  &kp RA(E)   &kp RA(M)    &kp RA(SEMI)  &trans 
                // hat              diaresis    
                &kp K26  &trans   &kp LS(K26)   &trans   &trans   &trans   

                //         à         ù       ` accent      é 
                &trans  &kp K43   &kp K86   &kp RA(K26)  &kp K40  &trans
                //     ç
                &kp K27   &trans  &trans  &trans  &trans  &trans

                //                           
                &trans   &trans   &trans  &trans  &trans  &trans
                // empty
                &trans   &trans   &trans  &trans  &trans  &trans

                //
                &trans   &trans   &trans    &trans   &trans
                >;
        };


        gaming_layer {
            bindings = <
                //
                &kp   TAB   &trans   &kp Q   &kp W    &kp E    &kp F3
                //
                &trans      &trans   &kp UP   &trans   &trans   &trans

                //
                &mt LCTRL ESCAPE    &trans     &kp A      &kp S       &kp D    &kp F
                //
                &trans        &kp LEFT   &kp DOWN   &kp RIGHT   &trans   &trans

                //
                &tog GAMES  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
                //
                &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &trans  &trans  &kp PRINTSCREEN

                // <disable>   <disable>           <maj>       <disable>
                &kp LEFT_ALT  &kp LSHIFT  &kp SPACE &kp LSHIFT   &kp LEFT_WIN
                >;
        };


        function_layer {
            bindings = <
                // FUNCTION KEYS
                &kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  
                &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11 

                &none &none &none &none &none &none
                &kp HOME &kp PAGE_DOWN &kp PAGE_UP &kp END &none &none
                //
                &tog FUNCTION   &none   &none   &none   &none   &none   
                &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &trans  &trans  &kp PRINTSCREEN

                //
                &none   &trans   &none   &none    &none
                >;
        };
    };
};
