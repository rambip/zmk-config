/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        i_trema: i_trema {
            compatible = "zmk,behavior-macro";
            label = "i_trema";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp I>;
            wait-ms = <30>;
            tap-ms = <30>;
        };
        r_bracket: r_bracket {
            compatible = "zmk,behavior-macro";
            label = "r_bracket";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp NUMBER_0>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            wait-ms = <30>;
            tap-ms = <30>;
        };
        l_bracket: l_bracket {
            compatible = "zmk,behavior-macro";
            label = "l_bracket";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp NUMBER_9>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            wait-ms = <30>;
            tap-ms = <30>;
        };
        r_brace: r_brace {
            compatible = "zmk,behavior-macro";
            label = "r_brace";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp N8>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            wait-ms = <30>;
            tap-ms = <30>;
        };
        l_brace: l_brace {
            compatible = "zmk,behavior-macro";
            label = "l_brace";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp NUMBER_7>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            wait-ms = <30>;
            tap-ms = <30>;
        };
        e_hat: e_hat {
            compatible = "zmk,behavior-macro";
            label = "e_hat";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp E>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        caret: caret {
            compatible = "zmk,behavior-macro";
            label = "caret";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp SPACE>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        lt_symb: lt_symb {
            compatible = "zmk,behavior-macro";
            label = "lt";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp COMMA>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
        gt_symb: gt_symb {
            compatible = "zmk,behavior-macro";
            label = "gt";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp DOT>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
        pipe: pipe {
            compatible = "zmk,behavior-macro";
            label = "pipe";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
        i_hat: i_hat {
            compatible = "zmk,behavior-macro";
            label = "i_hat";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp I>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        o_hat: o_hat {
            compatible = "zmk,behavior-macro";
            label = "o_hat";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp O>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        a_hat: a_hat {
            compatible = "zmk,behavior-macro";
            label = "a_hat";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp A>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        u_hat: u_hat {
            compatible = "zmk,behavior-macro";
            label = "u_hat";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp U>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        tilde: tilde {
            compatible = "zmk,behavior-macro";
            label = "tilde";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp RIGHT_BRACKET>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
        backtick: backtick {
            compatible = "zmk,behavior-macro";
            label = "backtick";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp LEFT_BRACKET &kp SPACE>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <60>;
        };
        e_trema: e_trema {
            compatible = "zmk,behavior-macro";
            label = "e_trema";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp E>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        euro: euro {
            compatible = "zmk,behavior-macro";
            label = "euro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp E>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
        backtick_double: backtick_double {
            compatible = "zmk,behavior-macro";
            label = "backtick_double";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp LEFT_BRACKET &kp LEFT_BRACKET>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                // <tab>     B         Ã‰         P       O       W
                &kp TAB   &kp B   &kp SLASH   &kp P   &kp O   &kp W              
                // <accent>   V        D         L       J       <bsp>
                &sl 4       &kp V   &kp D     &kp L   &kp J    &kp BSPC

                // <escape> -> <ctrl>     A       U       I       E      ,
                &mt LCTRL ESCAPE       &kp A   &kp U   &kp I   &kp E  &kp COMMA
                // C        T       S       R       N       M
                &kp C      &kp T   &kp S   &kp R   &kp N   &kp M

                // <super>      Z       Y       X       .           =
                &kp LEFT_WIN   &kp Z   &kp Y   &kp X   &kp DOT   &kp EQUAL
                // K      Q       G       H       F       <enter>
                &kp K   &kp Q   &kp G   &kp H   &kp F    &kp ENTER

                // <alt>      - -> <symbol layer>    <space>       : -> shift>      <numeric layer> 
                &kp LEFT_ALT   &lt 1 MINUS          &kp SPACE   &mt RIGHT_SHIFT COLON   &mo 2
                >;
        };

        SYMBOLS {
            bindings = <
                //  /          !            @           #       $       %
                &kp SLASH    &kp EXCL      &kp AT  &kp HASH  &kp DLLR  &kp PRCNT
                // ^      &          *          (          )       <backspace>
                &caret  &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR     &kp DEL

                // <caps>      [       ]            {          }        ;
                &kp CAPS  &l_bracket  &r_bracket  &l_brace  &r_brace  &kp SEMI
                // <-       \/          /\        ->           |         \
                &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT      &pipe      &kp TILDE

                // :        =       =       "       <--
                &kp COLON   &kp EQUAL   &kp EQUAL  &kp PLUS   &kp DOT   &kp HOME
                // <--        ~       <           >         /       ???
                &kp END    &tilde  &lt_symb   &gt_symb  &kp GRAVE  &mt RSHFT RET

                //                    _               <two thumbs = adjust layer>
                &trans    &trans   &kp UNDERSCORE       &mo 3     &mo 3
                >;
        };

        NUM {
            bindings = <
                //          1          2       3        4       5
                &trans     &kp N1   &kp N2   &kp N3   &kp N4   &kp N5
                //  6       7        8        9       10        <delete>
                &kp N6    &kp N7   &kp N8   &kp N9   &kp N0    &kp DEL

                //          =        -          +           .       ,
                &trans  &kp EQUAL  &kp MINUS  &kp PLUS  &kp DOT  &kp COMMA
                // <-       \/          /\        ->           0        <print> 
                &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp NUMBER_0  &kp PRINTSCREEN

                &kp F12   &kp F1   &kp F2    &kp F3   &kp F4     &kp F5
                &kp F6    &kp F7   &kp F8    &kp F9   &kp F10    &kp PRINTSCREEN

                //       <symbols>      <game mode>  
                &trans    &mo 3           &tog 5         &trans  &trans
                >;
        };
        adjust_layer {
            bindings = <
                &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF   &none  &rgb_ug RGB_TOG
                // bluetooth profile selection
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &bt BT_CLR

                //
                &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR   &none
                &none   &none   &none   &none   &sys_reset   &none   &none

                //
                &none   &none   &none   &none   &none   &none   
                &sys_reset   &none   &none   &none   &none   &bootloader

                //              <game mode>
                &trans   &trans   &tog 3   &bootloader   &trans
                >;
        };

        ACCENTS {
            bindings = <
                //
                &backtick_double     &a_hat   &u_hat   &i_hat   &e_hat   &o_hat
                //
                &kp RIGHT_BRACKET    &trans   &trans   &trans   &trans   &trans

                //
                &trans  &kp NON_US_HASH   &kp NON_US_BSLH    &kp I    &kp SINGLE_QUOTE  &kp SEMI
                //
                &trans  &trans  &trans  &trans  &trans  &trans

                //
                &trans   &trans   &trans   &i_trema   &e_trema   &kp   CARET
                //
                &trans   &trans   &trans   &trans     &trans       &trans

                //
                &trans   &trans   &backtick   &trans   &trans
                >;
        };

        GAMES {
            bindings = <
                //
                &kp   TAB   &trans   &trans   &kp W    &kp E    &trans
                //
                &trans      &trans   &kp UP   &trans   &trans   &trans

                //
                &kp ESCAPE    &trans     &kp A      &kp S       &kp D    &kp F
                //
                &trans        &kp LEFT   &kp DOWN   &kp RIGHT   &trans   &kp PRINTSCREEN

                //
                &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5
                //
                &kp C_MUTE    &kp C_VOLUME_DOWN    &kp C_VOL_UP     &trans  &trans  &trans

                // <disable>   <disable>           <maj>       <disable>
                &tog 5           &tog 5   &trans   &kp LSHIFT   &tog 5
                >;
        };
    };
};
