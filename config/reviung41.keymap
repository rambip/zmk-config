/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        i_trema: i_trema {
            compatible = "zmk,behavior-macro";
            label = "i_trema";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp I>;
            wait-ms = <30>;
            tap-ms = <30>;
        };
        r_bracket: r_bracket {
            compatible = "zmk,behavior-macro";
            label = "r_bracket";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp NUMBER_0>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            wait-ms = <30>;
            tap-ms = <30>;
        };
        l_bracket: l_bracket {
            compatible = "zmk,behavior-macro";
            label = "l_bracket";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp NUMBER_9>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            wait-ms = <30>;
            tap-ms = <30>;
        };
        r_brace: r_brace {
            compatible = "zmk,behavior-macro";
            label = "r_brace";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp N8>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            wait-ms = <30>;
            tap-ms = <30>;
        };
        l_brace: l_brace {
            compatible = "zmk,behavior-macro";
            label = "l_brace";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp NUMBER_7>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            wait-ms = <30>;
            tap-ms = <30>;
        };
        e_hat: e_hat {
            compatible = "zmk,behavior-macro";
            label = "e_hat";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp E>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        caret: caret {
            compatible = "zmk,behavior-macro";
            label = "caret";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp SPACE>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        lt_symb: lt_symb {
            compatible = "zmk,behavior-macro";
            label = "lt";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp COMMA>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
        gt_symb: gt_symb {
            compatible = "zmk,behavior-macro";
            label = "gt";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp DOT>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
        pipe: pipe {
            compatible = "zmk,behavior-macro";
            label = "pipe";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
        i_hat: i_hat {
            compatible = "zmk,behavior-macro";
            label = "i_hat";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp I>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        o_hat: o_hat {
            compatible = "zmk,behavior-macro";
            label = "o_hat";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp O>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        a_hat: a_hat {
            compatible = "zmk,behavior-macro";
            label = "a_hat";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp A>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        tilde: tilde {
            compatible = "zmk,behavior-macro";
            label = "tilde";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp RIGHT_BRACKET>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
        backtick: backtick {
            compatible = "zmk,behavior-macro";
            label = "backtick";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp LEFT_BRACKET &kp SPACE>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // FIXME: dessin
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
          &kp TAB   &kp B  &kp SLASH         &kp P        &kp O      &kp W              &sl 4                  &kp V   &kp D   &kp L   &kp J   &kp BSPC
 &mt LCTRL ESCAPE   &kp A      &kp U         &kp I        &kp E  &kp COMMA              &kp C                  &kp T   &kp S   &kp R   &kp N      &kp M
     &kp LEFT_WIN   &kp Z      &kp Y         &kp X      &kp DOT     &kp LT              &kp K                  &kp Q   &kp G   &kp H   &kp F  &kp ENTER
                                      &kp LEFT_ALT  &lt 1 MINUS             &kp SPACE          &mt RIGHT_SHIFT COLON   &mo 2
            >;
        };

        SYMBOLS {
            // ---------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
 &kp SLASH    &kp EXCL      &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                    &caret  &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR        &kp DEL
  &kp CAPS  &l_bracket  &r_bracket  &l_brace  &r_brace   &kp PIPE                  &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  &kp TILDE          &pipe
    &trans      &trans      &trans    &trans    &trans     &trans                  &kp HOME    &tilde  &lt_symb   &gt_symb  &kp GRAVE  &mt RSHFT RET
                                      &trans    &trans             &kp UNDERSCORE               &mo 3     &mo 3
            >;
        };

        NUM {
            // -----------------------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
  &trans    &kp N1    &kp N2     &kp N3    &kp N4    &kp N5          &kp N6        &kp N7  &kp N8        &kp N9        &kp N0          &kp DEL
  &trans  &lt_symb  &gt_symb  &kp EQUAL  &kp PLUS  &kp BSLH          &kp N0  &kp NUMBER_0  &kp N0  &kp NUMBER_0  &kp NUMBER_0  &kp PRINTSCREEN
 &kp F12    &kp F1    &kp F2     &kp F3    &kp F4    &kp F5          &kp F6        &kp F7  &kp F8        &kp F9       &kp F10           &trans
                                 &trans     &mo 3            &tog 5                &trans  &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
 &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF   &none  &rgb_ug RGB_TOG          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &bt BT_CLR
 &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR   &none            &none                 &none         &none         &none        &reset         &none        &none
           &none            &none            &none            &none   &none            &none                &reset         &none         &none         &none         &none  &bootloader
                                                             &trans  &trans                   &tog 3                 &bootloader        &trans
            >;
        };

        ACCENTS {
            bindings = <
 &trans           &a_hat  &kp SINGLE_QUOTE  &i_trema        &o_hat         &trans             &kp RIGHT_BRACKET  &trans  &trans  &trans  &trans  &trans
 &trans  &kp NON_US_HASH   &kp NON_US_BSLH    &i_hat        &e_hat  &kp SEMICOLON                        &trans  &trans  &trans  &trans  &trans  &trans
 &trans           &trans            &trans    &trans  &kp NUMBER_6      &kp CARET                        &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans        &trans                 &backtick                     &trans  &trans
            >;
        };

        GAMES {
            bindings = <
    &kp TAB        &trans        &trans         &kp W        &trans        &trans              &trans             &trans        &kp UP     &trans  &trans           &trans
 &kp ESCAPE        &trans         &kp A         &kp S         &kp D        &trans              &trans           &kp LEFT      &kp DOWN  &kp RIGHT  &trans  &kp PRINTSCREEN
     &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5          &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP     &trans  &trans           &trans
                                               &tog 5        &tog 5                &trans                     &kp RSHIFT        &tog 5
            >;
        };
    };
};
