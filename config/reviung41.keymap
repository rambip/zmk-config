/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define SYMBOLS 1
#define NUMS 2
#define ACCENT 3
#define GAMES 4
#define ADJUST 5

// decimal HID code to keypress macro
// see https://github.com/zmkfirmware/zmk/blob/94789a092c6d8ddf5ab5ad88eb011a4ece6b5cee/app/include/dt-bindings/zmk/hid_usage_pages.h
#define C(hidcode) ((7 << 16) | hidcode)

// decimal HID combined with (right)-alt 
#define AC(hidcode) APPLY_MODS(MOD_RALT, C(hidcode))

// decimal HID combined with (left)-shift 
#define SC(hidcode) APPLY_MODS(MOD_LSFT, C(hidcode))


/ {
    macros {
        caret: caret {
            compatible = "zmk,behavior-macro";
            label = "caret";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp SPACE>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        backtick: backtick {
            compatible = "zmk,behavior-macro";
            label = "backtick";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp LEFT_BRACKET &kp SPACE>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <60>;
        };
        backtick_double: backtick_double {
            compatible = "zmk,behavior-macro";
            label = "backtick_double";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp LEFT_BRACKET &kp LEFT_BRACKET>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                // <tab>     B         É         P       O       W
                &kp TAB   &kp B   &kp C(53)   &kp P   &kp O   &kp W              
                // <accent>   V        D         L       J       <bsp>
                &sl ACCENT  &kp V   &kp D     &kp L   &kp J    &kp BSPC

                // <escape> -> <ctrl>     A       U       I       E      ,
                &mt LCTRL ESCAPE       &kp A   &kp U   &kp I   &kp E  &kp COMMA
                // C        T       S       R       N       M
                &kp C      &kp T   &kp S   &kp R   &kp N   &kp M

                // <super>      Z       Y       X       .          '
                &kp LEFT_WIN   &kp Z   &kp Y   &kp X   &kp DOT   &kp LS(COMMA)
                // K      Q       G       H       F       <enter>
                &kp K   &kp Q   &kp G   &kp H   &kp F    &kp ENTER

                // <alt>    "-" -> <symbol>      <space>          shift>           <nums> 
                &kp LALT   &lt SYMBOLS MINUS  &lt ADJUST SPACE   &kp RIGHT_SHIFT  &mo NUMS
                >;
        };

        symbol_layer {
            bindings = <
                //  /          !            @           #       $       %
                &kp SLASH    &kp EXCL      &kp AT  &kp HASH  &kp DLLR  &kp PRCNT
                // ^      &          *          (          )       <backspace>
                &caret  &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR     &kp DEL

                // <caps>      [        ]            {          }          :
                &kp CAPS  &kp RA(N9)  &kp RA(N0)  &kp RA(N9)  &kp RA(N0)  &kp COLON
                // <-       \/          /\        ->           |      <backslash>
                &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT   &kp AC(41)  &kp SC(41)
                //                         =          +        "          <--
                &trans      &trans      &kp EQUAL  &kp PLUS   &kp LS(DOT)   &kp HOME
                // -->        ~       <             >             /       ???
                &kp END  &AC(27)  &kp RA(COMMA)  &kp RA(DOT)  &kp C(41)  &trans

                //                    
                &trans    &trans   &kp UNDERSCORE       &trans     &trans
                >;
        };
        

        num_layer {
            bindings = < 
                //          1          2       3        4       5
                &trans     &kp N1   &kp N2   &kp N3   &kp N4   &kp N5
                //  6       7        8        9        0      mute
                &kp N6    &kp N7   &kp N8   &kp N9   &kp N0    &kp DELETE

                //          -        =          +           .       ,
                &trans  &kp MINUS  &kp EQUAL  &kp PLUS  &kp DOT  &kp COMMA
                // <-       \/          /\      ->       0
                &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp N0    &trans

                // function keys
                &trans    &kp F1   &kp F2    &kp F3   &kp F4     &kp F5
                &kp F6    &kp F7   &kp F8    &kp F9   &kp F10    &kp PRINTSCREEN

                //                      <game mode>  
                &trans    &trans       &tog GAMES        &trans  &trans
                >;
        };


        accent_layer {
            bindings = <
                //              €               µ           °
                &trans &trans  &kp RA(E)   &kp RA(M)    &kp RA(SEMI)  &trans 
                // `                        diaresis       hat
                &backtick_double  &trans &kp SC(26)   &kp C(26)   &trans   &trans   

                //         à           è          ` accent      ù          ;
                &trans  &kp C(43)   &kp C(86)   &kp AC(26)  &kp C(40)  &kp SEMI
                //     ç
                &kp C(27)  &trans  &trans  &trans  &trans  &trans

                //                                   ?
                &trans   &trans   &trans  &trans  &kp LS(N6)  &trans
                // empty
                &trans   &trans   &trans  &trans  &trans  &trans

                //
                &trans   &trans   &backtick   &trans   &trans
                >;
        };


        gaming_layer {
            bindings = <
                //
                &kp   TAB   &trans   &trans   &kp W    &kp E    &trans
                //
                &trans      &trans   &kp UP   &trans   &trans   &trans

                //
                &kp ESCAPE    &trans     &kp A      &kp S       &kp D    &kp F
                //
                &trans        &kp LEFT   &kp DOWN   &kp RIGHT   &trans   &trans

                //
                &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5
                //
                &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &trans  &trans  &kp PRINTSCREEN

                // <disable>   <disable>           <maj>       <disable>
                &tog GAMES    &tog GAMES  &trans   &kp LSHIFT   &tog GAMES
                >;
        };


        function_layer {
            bindings = <
                &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF   &none  &rgb_ug RGB_TOG
                // bluetooth profile selection
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &bt BT_CLR

                //
                &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR &none &none
                &none   &none   &none   &none   &sys_reset   &none   

                //
                &none   &none   &none   &none   &none   &none   
                &sys_reset   &none   &none   &none   &none   &bootloader

                //  
                &none   &none   &none   &none    &none
                >;
        };
    };
};
