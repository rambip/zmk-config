/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define SWITCH 1
#define SYMB 2
#define ACCENT 3
#define GAMES 4
#define FUNCTION 5

// decimal HID code to keypress macro
// see https://github.com/zmkfirmware/zmk/blob/94789a092c6d8ddf5ab5ad88eb011a4ece6b5cee/app/include/dt-bindings/zmk/hid_usage_pages.h
#define KEYPRESS_FROM_HID(hidcode) ((7 << 16) | hidcode)

// usb-hid scancodes from their usual keycode equivalent
#define K26 KEYPRESS_FROM_HID(0x2f)
#define K27 KEYPRESS_FROM_HID(0x30)
#define K40 KEYPRESS_FROM_HID(0x34)
#define K41 KEYPRESS_FROM_HID(0x35)
#define K43 KEYPRESS_FROM_HID(0x31)
#define K53 KEYPRESS_FROM_HID(0x38)
#define K86 KEYPRESS_FROM_HID(0x64)


&sk {
    release-after-ms = <1000>;
    quick-release;
};


/ {
    macros {
        caret: caret {
            compatible = "zmk,behavior-macro";
            label = "caret";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp SPACE>;
            tap-ms = <30>;
            wait-ms = <30>;
        };
        backtick_double: backtick_double {
            compatible = "zmk,behavior-macro";
            label = "backtick_double";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp LEFT_BRACKET &kp LEFT_BRACKET>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            tap-ms = <30>;
            wait-ms = <30>;
        };
    };

    behaviors {
        // apply modifier when hold, sticky modifier when tapped
        kp_sticky: behavior_key_sticky {
            compatible = "zmk,behavior-hold-tap";
            label = "kp_sticky";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&sk>;
        };

        // mod morph
        dot_colon: behaviour_dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comma_semi: behaviour_comma_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMI";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        quote_double: behaviour_quote_double {
            compatible = "zmk,behavior-mod-morph";
            label = "QUOTE_DOUBLE";
            #binding-cells = <0>;
            bindings = <&kp LS(COMMA)>, <&kp LS(DOT)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        excl1: reverse_shift_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_1";
            #binding-cells = <0>;
            bindings =
                <&kp EXCLAMATION>,
                <&kp N1>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        at2: reverse_shift_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_2";
            #binding-cells = <0>;
            bindings =
                <&kp AT>,
                <&kp N2>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        hash3: reverse_shift_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_3";
            #binding-cells = <0>;
            bindings =
                <&kp HASH>,
                <&kp N3>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dollar4: reverse_shift_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_4";
            #binding-cells = <0>;
            bindings =
                <&kp DOLLAR>,
                <&kp N4>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        percent5: reverse_shift_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_5";
            #binding-cells = <0>;
            bindings =
                <&kp PERCENT>,
                <&kp N5>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        caret6: reverse_shift_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_6";
            #binding-cells = <0>;
            bindings =
                <&caret>,
                <&kp N6>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        amps7: reverse_shift_7 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_7";
            #binding-cells = <0>;
            bindings =
                <&kp AMPERSAND>,
                <&kp N7>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        star8: reverse_shift_8 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_8";
            #binding-cells = <0>;
            bindings =
                <&kp ASTERISK>,
                <&kp N8>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lpar9: reverse_shift_9 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_9";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp N9>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        rpar0: reverse_shift_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "NUMSH_0";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp N0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                // <tab>     B         É         P       O       W
                &kp TAB   &kp B   &kp K53   &kp P   &kp O   &kp W              
                // <accent>   V        D         L       J       <bsp>
                &sl ACCENT  &kp V   &kp D     &kp L   &kp J    &kp BSPC

                // <escape> -> <ctrl>     A       U       I       E      ,
                &mt LCTRL ESCAPE       &kp A   &kp U   &kp I   &kp E  &comma_semi
                // C        T       S       R       N       M
                &kp C      &kp T   &kp S   &kp R   &kp N   &kp M

                // change layout    Z       Y       X       .            '
                &mo SWITCH        &kp Z   &kp Y   &kp X   &dot_colon  &quote_double
                // K      Q       G       H       F       <enter>
                &kp K   &kp Q   &kp G   &kp H   &kp F    &kp ENTER

                // <alt>       <shift>                    <space>       <symbols>      <super> 
                &kp LALT   &kp_sticky LSHIFT LSHIFT  &lt FUNCTION SPACE  &mo SYMB    &kp LEFT_WIN
                >;
        };

        switch_layer {
            bindings = <

                &none &none &none &none &none &none
                // bluetooth profile selection
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4 &bt BT_CLR

                // output selection
                &none &out OUT_BLE &out OUT_USB &none &none &none
                // change layout
                &none  &trans  &tog SYMB  &none  &none  &none

                &none &none &none &none &none &none
                // change layout
                &none &none &tog GAMES &none &tog FUNCTION &none

                &none &none &none &none &none
            >;
        };

        symbol_layer {
            bindings = <
                //          !        @      #       $         %
                &trans    &excl1   &at2  &hash3  &dollar4  &percent5
                // ^        &       *       (        )       <backspace>
                &caret6  &amps7  &star8   &lpar9   &rpar0     &kp DEL

                //             ?           =          +         -          _ 
                &trans    &kp LS(N6)  &kp EQUAL  &kp PLUS  &kp MINUS  &kp UNDERSCORE
                // <-       \/          /\        ->           |      <backslash>
                &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT   &kp RA(K41)  &kp LS(K41)

                //             [        ]            {          }             
                &tog SYMB  &kp RA(N9)  &kp RA(N0)  &kp RA(N7)  &kp RA(N8)  &trans
                //                     ~           <              >           /     
                &backtick_double  &kp RA(K27)  &kp RA(COMMA)  &kp RA(DOT)  &kp K41  &kp ENTER

                //                    
                &trans    &kp LSHIFT   &kp SPACE    &trans     &trans
                >;
        };
        

        accent_layer {
            bindings = <
                //              €               µ           °
                &trans &trans  &kp RA(E)   &kp RA(M)    &kp RA(SEMI)  &trans 
                // hat              diaresis    
                &kp K26  &trans   &kp LS(K26)   &trans   &trans   &trans   

                //         à         ù       ` accent      é 
                &trans  &kp K43   &kp K86   &kp RA(K26)  &kp K40  &trans
                //     ç
                &kp K27   &trans  &trans  &trans  &trans  &trans

                //                           
                &trans   &trans   &trans  &trans  &trans  &trans
                // empty
                &trans   &trans   &trans  &trans  &trans  &trans

                //
                &trans   &kp LSHIFT   &trans    &trans   &trans
                >;
        };


        gaming_layer {
            bindings = <
                //
                &kp   TAB   &trans   &kp Q   &kp W    &kp E    &kp F3
                //
                &trans      &trans   &kp UP   &trans   &trans   &trans

                //
                &mt LCTRL ESCAPE    &trans     &kp A      &kp S       &kp D    &kp F
                //
                &trans        &kp LEFT   &kp DOWN   &kp RIGHT   &trans   &trans

                //
                &tog GAMES  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
                //
                &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &trans  &trans  &kp PRINTSCREEN

                //              <maj>                            
                &kp LEFT_ALT  &kp LSHIFT  &kp SPACE   &none   &kp LEFT_WIN
                >;
        };


        function_layer {
            bindings = <
                // FUNCTION KEYS
                &kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  
                &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11 

                &kp CAPS &none &none &none &none &none
                &kp HOME &kp PAGE_DOWN &kp PAGE_UP &kp END &none &none
                //
                &tog FUNCTION   &none   &none   &none   &none   &none   
                &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &trans  &trans  &kp PRINTSCREEN

                //
                &none   &trans   &none   &none    &none
                >;
        };
    };
};
